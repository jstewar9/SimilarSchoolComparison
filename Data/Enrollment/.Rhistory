# Add ethnic text variable
mutate(ETHNIC_TXT = case_when(
ETHNIC == "0" ~ "Not Reported"
, ETHNIC == "1" ~ "American Indian or Alaska Native"
, ETHNIC == "2" ~ "Asian"
, ETHNIC == "3" ~ "Pacific Islander"
, ETHNIC == "4" ~ "Filipino"
, ETHNIC == "5" ~ "Hispanic or Latino"
, ETHNIC == "6" ~ "African American"
, ETHNIC == "7" ~ "White"
, ETHNIC == "9" ~ "Two or More Races")) %>%
# Re-order columns
select(FILE_NAME
, CDS_CODE
, ETHNIC_TXT
, GENDER
, ENR_TOTAL) %>%
# Group by year, school, and ethnicity
group_by(FILE_NAME
, CDS_CODE
, ETHNIC_TXT) %>%
# Calculate total enrollment by ethnicity by school
summarise_at(vars(ENR_TOTAL)
, funs(sum)) %>%
# Convert output to a data frame
as.data.frame()
# ETHNIC_TXT variable is not needed
select(FILE_NAME
, CDS_CODE
, ENR_TOTAL) %>%
# Group by school
group_by(FILE_NAME
, CDS_CODE) %>%
# Calculate total enrollment for each school
summarise_at(vars(ENR_TOTAL)
, funs(sum))
# Conver output to data frame
as.data.frame()
#
df_enr_tot <- df_enr %>%
# Add ethnic text variable
mutate(ETHNIC_TXT = case_when(
ETHNIC == "0" ~ "Not Reported"
, ETHNIC == "1" ~ "American Indian or Alaska Native"
, ETHNIC == "2" ~ "Asian"
, ETHNIC == "3" ~ "Pacific Islander"
, ETHNIC == "4" ~ "Filipino"
, ETHNIC == "5" ~ "Hispanic or Latino"
, ETHNIC == "6" ~ "African American"
, ETHNIC == "7" ~ "White"
, ETHNIC == "9" ~ "Two or More Races")) %>%
# Re-order columns
select(FILE_NAME
, CDS_CODE
, ETHNIC_TXT
, GENDER
, ENR_TOTAL) %>%
# Group by year, school, and ethnicity
group_by(FILE_NAME
, CDS_CODE
, ETHNIC_TXT) %>%
# Calculate total enrollment by ethnicity by school
summarise_at(vars(ENR_TOTAL)
, funs(sum)) %>%
# Convert output to a data frame
as.data.frame() %>%
# ETHNIC_TXT variable is not needed
select(FILE_NAME
, CDS_CODE
, ENR_TOTAL) %>%
# Group by school
group_by(FILE_NAME
, CDS_CODE) %>%
# Calculate total enrollment for each school
summarise_at(vars(ENR_TOTAL)
, funs(sum)) %>%
# Conver output to data frame
as.data.frame()
# Import CDE enrollment data files from 2007-2008 school year and beyond into a data frame
# Clear console
cat("\014")
# Clear memory
rm(list=ls())
gc()
# Install/load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, tidyr, dplyr)
# Set working directory
setwd("C:/Data/State Data Files/Enrollment")
# Create list to store data frames
l_dataframes <- list()
# List of files in the working folder
l_files <- dir()
# Import each file into a data frame
for (i in 1:length(l_files)) {
l_dataframes[[i]] <- l_files[i] %>%
# Import file
read.csv(header = TRUE
, sep = "\t"
, colClasses = c(rep("character", 6)
, rep("integer", 17))) %>%
# Parse school year from file name
mutate(FILE_NAME = l_files[i]) %>%
# Keep relevant columns
select(FILE_NAME
, CDS_CODE
, ETHNIC
, GENDER
, ENR_TOTAL)
}
# Create single data frame
df_enr <- bind_rows(l_dataframes)
# Clean up
rm(i, l_dataframes, l_files)
gc()
# Add variables
df_test <- df_enr %>%
# Add school year column
mutate(SCHOOL_YEAR = substring(FILE_NAME
, 5
, 9))
# Add variables
df_test <- df_enr %>%
# Add school year column
mutate(SCHOOL_YEAR = substring(FILE_NAME
, 5
, 8))
# Import CDE enrollment data files from 2007-2008 school year and beyond into a data frame
# Clear console
cat("\014")
# Clear memory
rm(list=ls())
gc()
# Install/load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, tidyr, dplyr)
# Set working directory
setwd("C:/Data/State Data Files/Enrollment")
# Create list to store data frames
l_dataframes <- list()
# List of files in the working folder
l_files <- dir()
# Import each file into a data frame
for (i in 1:length(l_files)) {
l_dataframes[[i]] <- l_files[i] %>%
# Import file
read.csv(header = TRUE
, sep = "\t"
, colClasses = c(rep("character", 6)
, rep("integer", 17))) %>%
# Parse school year from file name
mutate(FILE_NAME = l_files[i]) %>%
}
# Import CDE enrollment data files from 2007-2008 school year and beyond into a data frame
# Clear console
cat("\014")
# Clear memory
rm(list=ls())
gc()
# Install/load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, tidyr, dplyr)
# Set working directory
setwd("C:/Data/State Data Files/Enrollment")
# Create list to store data frames
l_dataframes <- list()
# List of files in the working folder
l_files <- dir()
# Import each file into a data frame
for (i in 1:length(l_files)) {
l_dataframes[[i]] <- l_files[i] %>%
# Import file
read.csv(header = TRUE
, sep = "\t"
, colClasses = c(rep("character", 6)
, rep("integer", 17))) %>%
# Parse school year from file name
mutate(FILE_NAME = l_files[i])
}
# Create single data frame
df_enr <- bind_rows(l_dataframes)
# Clean up
rm(i, l_dataframes, l_files)
gc()
# Add variables
df_test <- df_enr %>%
# Add school year column
mutate(SCHOOL_YEAR = substring(FILE_NAME
, 5
, 8))
# Add variables
df_test <- df_enr %>%
# Add school year column
mutate(SCHOOL_YEAR = substring(FILE_NAME
, 5
, 8)) %>%
# Drop file name
select(-FILE_NAME) %>%
# Add ethnic text variable
mutate(ETHNIC_TXT = case_when(
ETHNIC == "0" ~ "Not Reported"
, ETHNIC == "1" ~ "American Indian or Alaska Native"
, ETHNIC == "2" ~ "Asian"
, ETHNIC == "3" ~ "Pacific Islander"
, ETHNIC == "4" ~ "Filipino"
, ETHNIC == "5" ~ "Hispanic or Latino"
, ETHNIC == "6" ~ "African American"
, ETHNIC == "7" ~ "White"
, ETHNIC == "9" ~ "Two or More Races"))
# Create Tableau-friendly data sources from CDE data files
# Renaming and organizing CORE data files for submission to CORE FTP
# Clear console
cat("\014")
# Clear memory
rm(list=ls())
gc()
# Install/load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, tidyr, dplyr, readxl, corpcor, MASS)
# Set working directory
setwd("C:/Data/State Data Files")
#------------------------------------------------
# Public Schools Directory
#------------------------------------------------
# Import publschls.txt, tab-delimited file
df_pubschls <- "pubschls.txt" %>%
# Import file
read.csv(header = TRUE
, sep = "\t"
, colClasses = "character") %>%
# Keep active schools
filter(StatusType == "Active") %>%
# Keep relevant columns; rename CDSCode to CDS_CODE to match other file formats
select(CDS_CODE = CDSCode
, County
, District
, School
, StreetAbr
, City
, Zip
, State
, Phone
, WebSite
, Charter
, CharterNum
, DOCType
, SOCType
, EdOpsName
, EILName
, GSoffered
, GSserved
, Latitude
, Longitude
, AdmFName1
, AdmLName1
, AdmEmail1
, LastUpDate)
#------------------------------------------------
# Enrollment
#------------------------------------------------
# Create Tableau-friendly data sources from CDE data files
# Renaming and organizing CORE data files for submission to CORE FTP
# Clear console
cat("\014")
# Clear memory
rm(list=ls())
gc()
# Install/load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, tidyr, dplyr, readxl, corpcor, MASS)
# Set working directory
setwd("C:/Data/State Data Files")
#------------------------------------------------
# Public Schools Directory
#------------------------------------------------
# Import publschls.txt, tab-delimited file
df_pubschls <- "pubschls.txt" %>%
# Import file
read.csv(header = TRUE
, sep = "\t"
, colClasses = "character") %>%
# Keep active schools
filter(StatusType == "Active") %>%
# Keep relevant columns; rename CDSCode to CDS_CODE to match other file formats
select(CDS_CODE = CDSCode
, County
, District
, School
, StreetAbr
, City
, Zip
, State
, Phone
, WebSite
, Charter
, CharterNum
, DOCType
, SOCType
, EdOpsName
, EILName
, GSoffered
, GSserved
, Latitude
, Longitude
, AdmFName1
, AdmLName1
, AdmEmail1
, LastUpDate)
# Import publschls.txt, tab-delimited file
df_pubschls <- "pubschls.txt" %>%
# Import file
read.csv(header = TRUE
, sep = "\t"
, colClasses = "character") %>%
# Keep active schools
filter(StatusType == "Active")
# Import publschls.txt, tab-delimited file
df_pubschls <- "pubschls.txt" %>%
# Import file
read.csv(header = TRUE
, sep = "\t"
, colClasses = "character") %>%
# Keep active schools
filter(StatusType == "Active") %>%
# Keep relevant columns; rename CDSCode to CDS_CODE to match other file formats
dplyr::select(CDS_CODE = CDSCode
, County
, District
, School
, StreetAbr
, City
, Zip
, State
, Phone
, WebSite
, Charter
, CharterNum
, DOCType
, SOCType
, EdOpsName
, EILName
, GSoffered
, GSserved
, Latitude
, Longitude
, AdmFName1
, AdmLName1
, AdmEmail1
, LastUpDate)
#------------------------------------------------
# Enrollment
#------------------------------------------------
source("C://Data/EnrollmentData.R")
#------------------------------------------------
# Enrollment
#------------------------------------------------
source("C://Data/EnrollmentData.R")
# Create Tableau-friendly data sources from CDE data files
# Renaming and organizing CORE data files for submission to CORE FTP
# Clear console
cat("\014")
# Clear memory
rm(list=ls())
gc()
# Install/load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, tidyr, dplyr, readxl)
# Set working directory
setwd("C:/Data/State Data Files")
#------------------------------------------------
# Public Schools Directory
#------------------------------------------------
# Import publschls.txt, tab-delimited file
df_pubschls <- "pubschls.txt" %>%
# Import file
read.csv(header = TRUE
, sep = "\t"
, colClasses = "character") %>%
# Keep active schools
filter(StatusType == "Active") %>%
# Keep relevant columns; rename CDSCode to CDS_CODE to match other file formats
select(CDS_CODE = CDSCode
, County
, District
, School
, StreetAbr
, City
, Zip
, State
, Phone
, WebSite
, Charter
, CharterNum
, DOCType
, SOCType
, EdOpsName
, EILName
, GSoffered
, GSserved
, Latitude
, Longitude
, AdmFName1
, AdmLName1
, AdmEmail1
, LastUpDate)
#------------------------------------------------
# Enrollment
#------------------------------------------------
# Create Tableau-friendly data sources from CDE data files
# Renaming and organizing CORE data files for submission to CORE FTP
# Clear console
cat("\014")
# Clear memory
rm(list=ls())
gc()
# Install/load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, tidyr, dplyr, readxl)
# Set working directory
setwd("C:/Data/State Data Files")
#------------------------------------------------
# Public Schools Directory
#------------------------------------------------
# Import publschls.txt, tab-delimited file
df_pubschls <- "pubschls.txt" %>%
# Import file
read.csv(header = TRUE
, sep = "\t"
, colClasses = "character") %>%
# Keep active schools
filter(StatusType == "Active") %>%
# Keep relevant columns; rename CDSCode to CDS_CODE to match other file formats
dplyr::select(CDS_CODE = CDSCode
, County
, District
, School
, StreetAbr
, City
, Zip
, State
, Phone
, WebSite
, Charter
, CharterNum
, DOCType
, SOCType
, EdOpsName
, EILName
, GSoffered
, GSserved
, Latitude
, Longitude
, AdmFName1
, AdmLName1
, AdmEmail1
, LastUpDate)
#------------------------------------------------
# Enrollment
#------------------------------------------------
source("C://Data/EnrollmentData.R")
# Create Tableau-friendly data sources from CDE data files
# Renaming and organizing CORE data files for submission to CORE FTP
# Clear console
cat("\014")
# Clear memory
rm(list=ls())
gc()
# Install/load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, tidyr, dplyr, readxl)
# Set working directory
setwd("C:/Data/State Data Files")
#------------------------------------------------
# Public Schools Directory
#------------------------------------------------
# Import publschls.txt, tab-delimited file
df_pubschls <- "pubschls.txt" %>%
# Import file
read.csv(header = TRUE
, sep = "\t"
, colClasses = "character") %>%
# Keep active schools
filter(StatusType == "Active") %>%
# Keep relevant columns; rename CDSCode to CDS_CODE to match other file formats
dplyr::select(CDS_CODE = CDSCode
, County
, District
, School
, StreetAbr
, City
, Zip
, State
, Phone
, WebSite
, Charter
, CharterNum
, DOCType
, SOCType
, EdOpsName
, EILName
, GSoffered
, GSserved
, Latitude
, Longitude
, AdmFName1
, AdmLName1
, AdmEmail1
, LastUpDate)
#------------------------------------------------
# Enrollment
#------------------------------------------------
source("C://Data/EnrollmentData.R")
